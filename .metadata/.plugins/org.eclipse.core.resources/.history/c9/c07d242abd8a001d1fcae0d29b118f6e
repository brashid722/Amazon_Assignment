package clipBoardHealth.abstractComponents;

import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class Keywords {
	
	static WebDriver driver;
	
	public Keywords(WebDriver driver) {
		
		Keywords.driver = driver;
	}
	
	public static boolean waitForElementPresence(By element, String timeout)
	{
		try {
			Keywords.waitForElementToLoad(element, timeout);
			return ((WebElement) element).isDisplayed();
		}
		catch(Exception E) {
			System.out.println("Error Waiting for Element:" + element);
		}
		return false;
	}
	
	public static void waitForElementToBeClickable(By element, String timeout)
	{
		try {
			WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));
			wait.until(ExpectedConditions.elementToBeClickable((WebElement) element));
		}
		catch (Exception E) {
			System.out.println("Error Waiting for Element:" + element);
		}
		
	}
	
	public static void waitForElementToLoad(By element, String timeout)
	{
		try {
			WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));
			wait.until(ExpectedConditions.visibilityOf((WebElement) element));
		}
		catch(Exception E) {
			System.out.println("Error Waiting for Element:" + element);
		}
	}
	
	public static void click(By element)
	{
		Keywords.waitForElementToBeClickable(element, "10");
		driver.findElement(element).click();
	}
	
	public static String getText(By element)
	{
		System.out.println("Text for element fetched is:" + ((WebElement) element).getText());
		Keywords.waitForElementToLoad(element, "10");
		return ((WebElement) element).getText();
	}
	
	

}
