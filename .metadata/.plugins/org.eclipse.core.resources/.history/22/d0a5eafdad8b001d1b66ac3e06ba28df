package com.clipboard.qa.base;

import java.time.Duration;
import java.util.Iterator;
import java.util.Set;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class Keywords {
	
	static WebDriver driver;
	
	public Keywords(WebDriver driver) {
		
		Keywords.driver = driver;
	}
	
	public static boolean waitForElementPresence(WebElement element, String timeout)
	{
		try {
			Keywords.waitForElementToLoad(element, timeout);
			return element.isDisplayed();
		}
		catch(Exception E) {
			System.out.println("Error Waiting for Element:" + element);
			return false;
		}
		
	}
	
	public static void waitForElementToBeClickable(By sortDropdown, String timeout)
	{
		try {
			WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));
			wait.until(ExpectedConditions.elementToBeClickable((WebElement) sortDropdown));
		}
		catch (Exception E) {
			System.out.println("Error Waiting for Element:" + sortDropdown);
		}
		
	}
	
	public static void waitForElementToLoad(By element, String timeout)
	{
		try {
			WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));
			wait.until(ExpectedConditions.visibilityOf((WebElement) element));
		}
		catch(Exception E) {
			System.out.println("Error Waiting for Element:" + element);
		}
	}
	
	public static void click(By element)
	{
		Keywords.waitForElementToBeClickable(element, "10");
		driver.findElement(element).click();
	}
	
	public static String getText(By element)
	{
		System.out.println("Text for element fetched is:" + ((WebElement) element).getText());
		Keywords.waitForElementToLoad(element, "10");
		return ((WebElement) element).getText();
	}
	
	public static void switchWindows(String mainWindow, String chidlWndow)
	{
		mainWindow = driver.getWindowHandle();
		//To handle new open window/windows
				Set<String> new_windows = driver.getWindowHandles();
				Iterator<String> i1 = new_windows.iterator();
				
				while(i1.hasNext())
				{
					String child_window = i1.next();
					
					if(!mainWindow.equalsIgnoreCase(child_window))
					{
						//Switch to child window
						driver.switchTo().window(child_window);
					}
				}
	}
	

}
